---
title: "Processos relacionados à Arbitragem"
subtitle: "Um levantamento preliminar no banco de sentenças do TJSP"
author: Associação Brasileira de Jurimetria
date: "2022-12-02"
execute: 
  echo: false
  freeze: true
knitr: 
  opts_chunk: 
    dpi: 300
    message: false
    warning: false
lang: pt
format: 
  html: default
  docx:
    reference-doc: template.docx
bibliography: geral.bib
---

```{r}
#| label: setup
devtools::load_all()
col_abj <- viridis::viridis(5, 1, .2, .8)
```

O Observatório da Arbitragem é um projeto que visa compreender o reflexo do fenômeno jurídico da arbitragem nos tribunais. Em sua primeira fase, o projeto busca compreender o fluxo dos processos de i) anulação de decisão arbitral, ii) cumprimento de sentença / execução, iii) medida cautelar antecedente ao tribunal arbitral, iv) compromisso arbitral e v) ação de instauração da arbitragem. 

O objetivo do levantamento é realizar uma análise preliminar a partir do banco de sentenças do Tribunal de Justiça de São Paulo (TJSP). O levantamento terá como resultado algumas estatísticas básicas como volume de sentenças ao longo do tempo, proporção de decisões favoráveis ao autor e tempo mediano dos processos. O estudo pode ser utilizado como insumo para decidir sobre a viabilidade de uma pesquisa mais aprofundada -- envolvendo análise de autos processuais -- a partir dos dados disponibilizados no banco de sentenças.

O presente levantamento descreve o fluxo de download, arrumação e análise dos dados de sentenças relacionadas à arbitragem. Na parte de download, descrevemos os termos utilizados para consulta e o procedimento de acesso aos dados, que são públicos, mas não são abertos. A parte de arrumação descreve todos os passos para chegar da base bruta até a base organizada, informando as colunas utilizadas. A análise mostra os resultados do levantamento, com estatísticas sobre o perfil dos processos, o volume de sentenças ao longo do tempo, a proporção de decisões favoráveis e o tempo médio das ações.

## Download

Os dados de processos do TJSP são públicos, mas não são abertos. Isso significa que não existe um meio fácil de obter uma lista de todos os processos que existem no tribunal a partir de um critério jurídico, geográfico ou temporal.

O tribunal, no entanto, disponibiliza ferramentas de consulta. Na [Consulta de Julgados do Primeiro Grau (CJPG)](https://esaj.tjsp.jus.br/cjpg/pesquisar.do) é possível acessar, manualmente, a lista de processos a partir de termos de busca (como palavras-chave, classes e assuntos). Cada processo, por sua vez, pode ser pesquisado manualmente em uma consulta de processos [Consulta de Processos do Primeiro Grau](https://esaj.tjsp.jus.br/cpopg/open.do).

Por conta da necessidade de realizar pesquisas no Direito, a ABJ desenvolveu, ao longo de sua história, algumas ferramentas que automatizam o fluxo manual de obtenção de dados. Essas ferramentas utilizam técnicas de raspagem de dados [@zhaoWebScraping2017] que, em poucas palavras, envolvem imitar o que um ser humano faria para acessar as páginas, mas de forma automática. Vale ressaltar que essa não é uma estratégia oficial nem desejável de ser utilizada ao acessar dados públicos. No entanto, por conta das limitações do tribunal, utilizar raspagem de dados acaba sendo necessário para tornar as pesquisas viáveis.

Ao acessar os dados via raspagem do CJPG, a primeira limitação que aparece são os campos disponíveis. Processos de arbitragem podem aparecer com classes e assuntos processuais[^classe] que não identificam corretamente os casos. Por exemplo, é comum encontrar como classe "procedimento ordinário" ou como assunto "anulação". Por isso, a única forma de listar os processos relacionados à arbitragem é através das palavras-chave.

[^classe]: Classes e assuntos são listas de tipos de processos organizadas pelo Conselho Nacional de Justiça (CNJ), através das Tabelas Processuais Unificadas (TPU), Res. 46 CNJ.

A desvantagem em utilizar palavras-chave é que as pesquisas se limitam ao que as ferramentas de pesquisa disponibilizam. Se a ferramenta de busca é falha, o resultado é falho. De qualquer forma, por falta de outros meios, essa foi a decisão tomada para acessar os processos relacionados à arbitragem.

O termo de busca utilizado para realizar a pesquisa foi `"arbitral" OU "lei de arbitragem" OU "9307" OU "9.307"`. A ideia da pesquisa foi realizar a busca mais genérica possível relacionada à arbitragem, sem incluir o termo "arbitragem", já que este aparece no nome das varas, o que implicaria em uma lista com todos os processos da vara.

Outro filtro realizado foi o das varas. Foram consideradas 4 varas no total: 1ª vara empresarial e conflitos de arbitragem, 2ª vara empresarial e conflitos de arbitragem, 1ª vara regional de competência empresarial e de conflitos relacionados à arbitragem e 2ª vara regional de competência empresarial e de conflitos relacionados à arbitragem.

A pesquisa retornou um total de 348 decisões. Dentre esses casos, foram encontrados 338 números de processos únicos, já que um processo pode apresentar mais de uma decisão. A consulta desses processos individualmente retornou 337 casos (1 caso foi descartado por estar em segredo de justiça). A base bruta final, portanto, possui 337 processos.

Neste ponto, uma discussão pode ser iniciada sobre o volume total de ações. Por envolver casos que potencialmente correm em segredo de justiça, é possível que uma parte dos casos não são acessíveis através do banco de sentenças. Além disso, por envolver apenas as varas empresariais, o recorte pode apresentar limitações de espaço (regiões) e tempo (criação das varas). Por último, por se tratar de um estudo retrospectivo (envolve apenas casos com sentença), pode ser que casos que ainda estão ativos fiquem de fora da lista. De qualquer forma, espera-se que a lista obtida, depois de limpa, possa ser utilizada como amostra aleatória da população de todos os processos relacionados a arbitragem.

## Arrumação

O primeiro passo da arrumação dos dados foi a classificação das categorias de processos e remoção de casos que não fazem parte do escopo. Para classificar as cinco categorias, foram utilizados os termos e expressões regulares da @tbl-rx-tipo. 

```{r}
#| label: tbl-rx-tipo
#| tbl-cap: "Expressões regulares utilizadas para classificar a categoria de ação"
rx_tipo() |> 
  tibble::enframe() |> 
  tidyr::unnest(value) |>
  dplyr::mutate(value = paste0("(", purrr::map_chr(value, paste, collapse = " OU "), ")")) |> 
  dplyr::group_by(name) |> 
  dplyr::summarise(value = paste(value, collapse = " E ")) |> 
  dplyr::transmute(
    name = stringr::str_to_title(name),
    value = purrr::map_chr(value, paste, collapse = ", ")
  ) |> 
  dplyr::arrange(dplyr::desc(name)) |> 
  knitr::kable(col.names = c("Categoria", "Expressões regulares"))
```

A @tbl-tabela-tipo mostra a quantidade de processos que caiu em cada categoria. É importante destacar que toda classificação automática pode incorrer em erros, ou seja, pode ser que as categorias finais fiquem incorretas. Os casos vazios foram retirados.

```{r}
#| label: tbl-tabela-tipo
#| tbl-cap: "Processos classificados por categoria"
da_cjpg_tidy |>
  dplyr::count(categoria, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n))) |>
  dplyr::mutate(
    categoria = tidyr::replace_na(categoria, "(vazio)"),
    categoria = stringr::str_to_title(categoria)
  ) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Resultado", "N", "%"))
```

O passo seguinte foi a obtenção dos resultados dos processos. Para classificar as categorias de resultados, foram utilizados os termos e expressões regulares da @tbl-rx-resultado. 

```{r}
#| label: tbl-rx-resultado
#| tbl-cap: "Expressões regulares utilizadas para classificar o resultado"
rx_resultado() |> 
  tibble::enframe() |> 
  tidyr::unnest(value) |>
  dplyr::mutate(value = paste0("(", purrr::map_chr(value, paste, collapse = " OU "), ")")) |> 
  dplyr::group_by(name) |> 
  dplyr::summarise(value = paste(value, collapse = " E ")) |> 
  dplyr::transmute(
    name = stringr::str_to_title(name),
    value = purrr::map_chr(value, paste, collapse = ", ")
  ) |> 
  knitr::kable(col.names = c("Categoria", "Expressões regulares"))
```

A @tbl-tabela-resultado mostra a quantidade de processos que caiu em cada categoria de resultado. Novamente, a classificação automática pode incorrer em erros, ou seja, pode ser que os resultados finais estejam incorretos. Os casos vazios foram retirados da análise.

```{r}
#| label: tbl-tabela-resultado
#| tbl-cap: "Processos classificados por resultado"
da_cjpg_tidy |>
  dplyr::count(resultado, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n), 1)) |>
  dplyr::mutate(
    resultado = tidyr::replace_na(resultado, "(vazio)"),
    resultado = stringr::str_to_title(resultado)
  ) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Resultado", "N", "%"))
```

Por último, as colunas importantes de análise foram construídas. As colunas escolhidas foram: status (em andamento, extinto, em grau de recurso ou suspenso), classe, assunto, valor da causa, processo digital, data de disponibilização da sentença, vara, resultado e tempo (calculado pelo tempo entre a data de distribuição e data da disponibilização da decisão).

### Revisão manual

A base de dados arrumada foi revisada manualmente a partir da leitura dos textos das decisões e outras características dos processos. A revisão foi realizada por profissionais do direito especializados no tema de arbitragem.

A primeira mudança significativa foi com relação aos casos que fazem parte do escopo. Dos 338 casos iniciais, sobraram 289 que realmente faziam parte do escopo[^carta-arbitral].

[^carta-arbitral]: Um caso foi identificado em uma nova categoria "Carta Arbitral" (1099760-61.2021.8.26.0100). O caso foi desconsiderado da análise.

Com relação às colunas da base, as principais informações alteradas foram as de categoria e resultado. A informação de categoria foi a que mais sofreu alterações, especialmente em ações de anulação de decisão arbitral, que ficaram maiores. A @tbl-tabela-tipo-revisao mostra as classificações depois da correção manual.

```{r}
#| label: tbl-tabela-tipo-revisao
#| tbl-cap: "Processos classificados por categoria, após revisão"
da_tidy |> 
  dplyr::count(categoria, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n))) |>
  dplyr::mutate(
    categoria = tidyr::replace_na(categoria, "(vazio)"),
    categoria = stringr::str_to_title(categoria)
  ) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Resultado", "N", "%"))
```

Com relação aos resultados, não houve mudanças tão significativas. A categoria que mais mudou foi a de acordos, que costumam ser difíceis de mapear apenas por palavras-chave. A @tbl-tabela-resultado-revisao mostra as classificações depois da correção manual.

```{r}
#| label: tbl-tabela-resultado-revisao
#| tbl-cap: "Processos classificados por resultado, após revisão"
da_tidy |>
  dplyr::count(resultado, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n), 1)) |>
  dplyr::mutate(
    resultado = tidyr::replace_na(resultado, "(vazio)"),
    resultado = stringr::str_to_title(resultado)
  ) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Resultado", "N", "%"))
```

Por último, duas colunas foram adicionadas após a classificação manual. A primeira é com relação à concessão de liminar em casos de medida cautelar. A segunda é que, na revisão manual, vários casos relacionados à Unimed foram detectados. Uma coluna `unimed` foi adicionada para permitir novos filtros de análise.

No final, a base ficou com 289 linhas e 13 colunas, contendo todas as informações utilizadas na parte de análise. A base de dados em Excel pode ser baixada [neste link](https://github.com/abjur/obsArb/raw/main/inst/da_arbitragem.xlsx).

### Segunda instância

Depois de baixar e revisar as sentenças, procurou-se os números de processos obtidos na segunda instância. Foram considerados apenas casos com apenas um recurso (agravo de instrumento ou apelação). Por exemplo, processos que tiveram mais de um agravo de instrumento foram desconsiderados.

Dos 289 processos, 173 apresentaram algum recurso, sendo 126 (73%) com classe "Apelação Cível" e 47 (27%) com classe "Agravo de Instrumento". Nessa base, somente 132 (76%) possuem alguma decisão, sendo 98 apelações e 34 agravos. Os demais recursos ainda estavam em curso no momento da coleta de dados.

A base de segunda instância foi considerada para calcular a taxa de recorribilidade e a taxa de decisões favoráveis na segunda instância. A taxa de reforma não foi calculada, porque para isso seria necessário analisar o polo da parte no processo de segunda instância, que não foi realizado por limitações técnicas.

A base considerada possui 173 linhas e 4 colunas. A base de dados em Excel pode ser baixada [neste link](https://github.com/abjur/obsArb/raw/main/inst/da_cposg_tidy.xlsx).

## Análise

A base possui 289 casos, dentre os quais 226 são digitais ou digitalizados (78%). Em uma nova análise manual mais aprofundada, seriam considerados apenas processos digitais ou digitalizados.

A @tbl-status mostra os status dos processos no momento da coleta dos dados, em novembro/2022. A maioria dos casos está extinta e aproximadamente um quinto dos casos está em grau de recurso.

```{r}
#| label: tbl-status
#| tbl-cap: "Status dos processos no momento da coleta dos dados"
da_tidy |> 
  dplyr::count(status, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n), 1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Status", "N", "%"))
```

Em seguida, são apresentadas tabelas das classes e assuntos mais comuns nos processos encontrados. É importante destacar que classes e assuntos nem sempre identificam corretamente o tipo de ação, tanto por motivos de taxonomia (o tipo de processo não existe na classificação do CNJ) quanto por motivos de má classificação (a pessoa que protocolou a ação colocou uma classe/assunto inadequada). Por isso, a classe e assunto não está sendo usada para classificar os tipos de processo.

A @tbl-classe mostra as classes processuais mais comuns encontradas. É possível notar que existem muitas classes que não são relacionadas diretamente a arbitragem.

```{r}
#| label: tbl-classe
#| tbl-cap: "Classes mais comuns"
da_tidy |> 
  dplyr::mutate(
    classe = forcats::fct_lump_n(classe, 10, other_level = "Outros")
  ) |> 
  dplyr::count(classe, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n), 1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Classe", "N", "%"))
```

A @tbl-assunto mostra os dez assuntos processuais mais comuns encontrados. Assim como nas classes, é possível notar que existem muitos assuntos que não são relacionadas diretamente a arbitragem.

```{r}
#| label: tbl-assunto
#| tbl-cap: "Assuntos mais comuns"
da_tidy |> 
  dplyr::mutate(
    assunto = forcats::fct_lump_n(assunto, 10, other_level = "Outros")
  ) |> 
  dplyr::count(assunto, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n), 1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Assunto", "N", "%"))
```

A @tbl-valor mostra a contagem de processos por faixa de valores de causa. É possível notar que existe uma alta assimetria, já que temos vários processos de até 10 mil reais, mas também processos de mais de 10 milhões de reais.

```{r}
#| label: tbl-valor
#| tbl-cap: "Faixas de valores"
da_tidy |> 
  dplyr::mutate(
    faixa = cut(
      valor, c(0, 1e4, 1e5, 1e6, 1e7, Inf), 
      labels = c(
        "Até R$ 10.000", 
        "Entre R$ 10.000 e R$ 100.000",
        "Entre R$ 100.000 e R$ 1 milhão",
        "Entre R$ 1 milhão e R$ 10 milhões",
        "R$ 10 milhões ou mais"
      )
    )
  ) |> 
  dplyr::count(faixa) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n), 1)) |> 
  dplyr::mutate(faixa = forcats::fct_explicit_na(faixa, "(Vazio)")) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Faixa", "N", "%"))

```

A @tbl-vara mostra a contagem de processos por vara. As varas empresariais do foro central cível concentram a maior parte dos casos. Por conta do pequeno número de informações, as análises de contagem de resultados e categorias por vara vão desconsiderar as RAJs.

```{r}
#| label: tbl-vara
#| tbl-cap: "Quantidade de processos por vara"
da_tidy |> 
  dplyr::count(vara, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n), 1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Faixa", "N", "%"))
```

A @fig-no-tempo mostra o volume de decisões ao longo do tempo, considerando como base a data de disponibilização das sentenças. É possível notar um aumento na quantidade de decisões nos anos de 2021 e 2022 (que ainda não acabou).

```{r}
#| label: fig-no-tempo
#| fig-cap: "Quantidade de decisões por ano"
#| fig-width: 7
#| fig-height: 4
da_tidy |> 
  dplyr::mutate(ano = lubridate::year(dt_disp)) |> 
  dplyr::count(ano) |> 
  ggplot2::ggplot() +
  ggplot2::aes(ano, n) +
  ggplot2::geom_col(fill = col_abj[1], width = .7) +
  ggplot2::labs(
    x = "Ano",
    y = "Quantidade de decisões"
  ) +
  ggplot2::theme_minimal(12)
```

A @fig-no-tempo-categoria mostra o volume de decisões ao longo do tempo, separando por categoria de caso. Com exceção das ações de Anulação, é possível observar um crescimento de casos nos anos de 2021 e 2022.

```{r}
#| label: fig-no-tempo-categoria
#| fig-cap: "Quantidade de decisões por ano e categoria"
#| fig-width: 7
#| fig-height: 4
da_tidy |> 
  dplyr::mutate(ano = lubridate::year(dt_disp)) |> 
  dplyr::count(ano, categoria) |> 
  ggplot2::ggplot() +
  ggplot2::aes(ano, n) +
  ggplot2::geom_col(width = .7, position = "dodge", fill = col_abj[1]) +
  ggplot2::labs(
    x = "Ano",
    y = "Quantidade de decisões",
    fill = "Categoria"
  ) +
  ggplot2::facet_wrap(~categoria) +
  ggthemes::theme_hc(12)
```

A @tbl-resultado mostra os resultados dos processos por categoria. Nas últimas linha e coluna, são apresentadas as contagens e proporções marginais. A proporção de casos extintos observada é mais alta do que o comum em análises de processos do TJSP. A taxa de procedência em anulatórias (considerando casos procedentes, parcialmente procedentes e acordos) é de 45%.

```{r}
#| label: tbl-resultado
#| tbl-cap: "Resultados dos processos por categoria"

tab_geral <- da_tidy |> 
  dplyr::count(categoria, resultado) |> 
  dplyr::group_by(categoria) |> 
  dplyr::mutate(prop = n/sum(n)) |>
  dplyr::ungroup() |> 
  dplyr::mutate(lab = stringr::str_glue("{n} ({scales::percent(prop, 1)})")) 

tab_total_col <- da_tidy |> 
  dplyr::count(categoria) |> 
  dplyr::mutate(prop = n/sum(n)) |> 
  dplyr::mutate(lab = stringr::str_glue("{n} ({scales::percent(prop, 1)})")) |> 
  dplyr::select(Total = lab)

tab_total_row <- da_tidy |> 
  dplyr::count(resultado) |> 
  dplyr::mutate(prop = n/sum(n)) |> 
  dplyr::mutate(lab = stringr::str_glue("{n} ({scales::percent(prop, 1)})")) |> 
  dplyr::transmute(
    name = resultado,
    value = lab
  ) |> 
  tidyr::pivot_wider() |> 
  dplyr::mutate(categoria = "Total", Total = stringr::str_glue("{nrow(da_tidy)} (100%)"))

tab_geral |> 
  dplyr::select(resultado, categoria, lab) |> 
  tidyr::pivot_wider(
    names_from = resultado, 
    values_from = lab, 
    values_fill = "0 (0%)"
  ) |> 
  dplyr::bind_cols(tab_total_col) |> 
  dplyr::bind_rows(tab_total_row) |> 
  dplyr::rename(Categoria = categoria) |> 
  knitr::kable()

```

A @fig-resultado-vara mostra os resultados dos processos por categoria e vara, considerando apenas as duas varas empresariais. A quantidade de processos é muito pequena para obter resultados conclusivos, mas aparentemente a segunda vara tende a dar mais resultados procedentes ou parcialmente procedentes nas ações anulatórias.

```{r}
#| label: fig-resultado-vara
#| fig-cap: "Proporção dos resultados dos processos por categoria e vara"
#| fig-width: 8
#| fig-height: 4
da_tidy |> 
  dplyr::count(vara, categoria, resultado) |> 
  dplyr::mutate(
    vara = stringr::str_extract(vara, "[12]ª VARA"),
    vara = stringr::str_to_title(vara)
  ) |> 
  dplyr::filter(!is.na(vara)) |> 
  dplyr::group_by(vara, categoria) |> 
  dplyr::mutate(prop = n/sum(n), total = sum(n)) |>
  dplyr::ungroup() |> 
  dplyr::mutate(vara = paste0(vara, "\n(N=", total, ")")) |> 
  ggplot2::ggplot(ggplot2::aes(x = vara, y = prop, fill = resultado)) +
  ggplot2::geom_col() +
  ggplot2::facet_wrap(~categoria, nrow = 1, scales = "free_x") +
  ggplot2::scale_fill_manual(values = col_abj) +
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ggthemes::theme_hc() +
  ggplot2::labs(x = "", y = "Proporção", fill = "Resultado")

```

Finalmente, a @tbl-tempo mostra os tempos médios e medianos, geral e por categoria. Os processos mais longos são os de compromisso arbitral, com mediana de quase um ano. Já os processos mais curtos são os de anulação, com mediana de aproximadamente seis meses.

```{r}
#| label: tbl-tempo
#| tbl-cap: "Estatísticas descritivas dos tempos dos processos"
geral <- da_tidy |> 
  dplyr::summarise(
    categoria = "Total",
    n = dplyr::n(),
    media = mean(tempo),
    mediana = median(tempo)
  )

da_tidy |> 
  dplyr::group_by(categoria) |> 
  dplyr::summarise(
    n = dplyr::n(),
    media = mean(tempo),
    mediana = median(tempo)
  ) |> 
  dplyr::arrange(dplyr::desc(mediana)) |> 
  dplyr::bind_rows(geral) |> 
  knitr::kable(col.names = c("Categoria", "N", "Média", "Mediana"), digits = 1)
```

### Questões adicionais

Após a revisão das análises, um novo conjunto de perguntas foi gerado. As perguntas foram respondidas com os gráficos e tabelas que seguem.

#### Qual a proporção de resultado para a categoria anulação envolvendo ou não a Unimed?

A @tbl-resultado-unimed mostra as proporções de resultados em processos de anulação considerando ou não a Unimed como parte. A taxa de casos favoráveis (soma de acordos, procedentes e parcialmente procedentes) é significativamente maior em casos envolvendo a Unimed. Para os demais casos, a taxa de casos favoráveis é de apenas 22%.

```{r}
#| label: tbl-resultado-unimed
#| tbl-cap: "Resultados dos processos de anulação pela existência ou não da Unimed como parte"
 
da_anulacao <- da_tidy |> 
  dplyr::filter(categoria == "Anulacao")

tab_geral <- da_anulacao |> 
  dplyr::count(unimed, resultado) |> 
  dplyr::group_by(unimed) |> 
  dplyr::mutate(prop = n/sum(n)) |>
  dplyr::ungroup() |> 
  dplyr::mutate(lab = stringr::str_glue("{n} ({scales::percent(prop, 1)})")) 

tab_total_col <- da_anulacao |> 
  dplyr::count(unimed) |> 
  dplyr::mutate(prop = n/sum(n)) |> 
  dplyr::mutate(lab = stringr::str_glue("{n} ({scales::percent(prop, 1)})")) |> 
  dplyr::select(Total = lab)

tab_total_row <- da_anulacao |> 
  dplyr::count(resultado) |> 
  dplyr::mutate(prop = n/sum(n)) |> 
  dplyr::mutate(lab = stringr::str_glue("{n} ({scales::percent(prop, 1)})")) |> 
  dplyr::transmute(
    name = resultado,
    value = lab
  ) |> 
  tidyr::pivot_wider() |> 
  dplyr::mutate(unimed = "Total", Total = stringr::str_glue("{nrow(da_anulacao)} (100%)"))

tab_geral |> 
  dplyr::select(resultado, unimed, lab) |> 
  tidyr::pivot_wider(
    names_from = resultado, 
    values_from = lab, 
    values_fill = "0 (0%)"
  ) |> 
  dplyr::bind_cols(tab_total_col) |> 
  dplyr::bind_rows(tab_total_row) |> 
  dplyr::rename(Unimed = unimed) |> 
  knitr::kable()

```


#### Qual o percentual de liminares deferidas na categoria de ação cautelar? 

A base contem 63 ações cautelares, pouco mais de um quinto da base completa. A @tbl-cautelar-liminar mostra os resultados das liminares nessas ações. É possível identificar que quase metade das liminares não são concedias. Importante destacar que, em 6 casos, a decisão liminar não foi encontrada.

```{r}
#| label: tbl-cautelar-liminar
#| tbl-cap: Resultados das liminares em ações cautelares.
da_cautelar <- da_tidy |> 
  dplyr::filter(categoria == "Cautelar")

da_cautelar |> 
  dplyr::count(liminar, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n), 1)) |>
  dplyr::mutate(
    liminar = tidyr::replace_na(liminar, "(vazio)"),
    liminar = stringr::str_to_title(liminar)
  ) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Resultado", "N", "%"))
```


#### Qual a média e mediana de valor para cada categoria de ação?

Finalmente, a @tbl-valor-tipo mostra os valores médios e medianos das causas, geral e por categoria. Os processos de maior valor são as anulatórias, com mediana de R$ 264.802,79. Já os processos de menor valor são as cautelares e instauração, com mediana de dez mil reais, provavelmente colocados apenas como valores de referência.

```{r}
#| label: tbl-valor-tipo
#| tbl-cap: "Estatísticas descritivas dos valores de causa dos processos"
geral <- da_tidy |> 
  dplyr::summarise(
    categoria = "Total",
    n = dplyr::n(),
    media = mean(valor, na.rm = TRUE),
    mediana = median(valor, na.rm = TRUE)
  )

da_tidy |> 
  dplyr::group_by(categoria) |> 
  dplyr::summarise(
    n = dplyr::n(),
    media = mean(valor, na.rm = TRUE),
    mediana = median(valor, na.rm = TRUE)
  ) |> 
  dplyr::arrange(dplyr::desc(mediana)) |> 
  dplyr::bind_rows(geral) |> 
  dplyr::mutate(dplyr::across(
    c(3,4), 
    scales::dollar, 
    prefix = "R$ ", accuracy = .01, big.mark = ".", decimal.mark = ","
  )) |> 
  knitr::kable(col.names = c("Categoria", "N", "Média", "Mediana"), digits = 1)
```

#### Qual é a taxa de favorabilidade em anulatórias ao longo do tempo?

A @fig-anulacao-no-tempo mostra a taxa de casos favoráveis (procedentes, parcialmente procedentes e acordos) em ações anulatórias por ano. Apesar da pequena quantidade de dados, é possível observar que a proporção de decisões favoráveis caiu em 2021 e 2022. Lembrando que a proporção geral de decisões favoráveis em anulatórias é de 45%, como demarcado na linha pontilhada.

```{r}
#| label: fig-anulacao-no-tempo
#| fig-cap: "Quantidade de decisões por ano"
#| fig-width: 7
#| fig-height: 4

aux_anulacao <- da_tidy |> 
  dplyr::filter(categoria == "Anulacao") |> 
  dplyr::mutate(
    favoravel = resultado %in% c("Acordo", "Parcial", "Procedente"),
    ano = lubridate::year(dt_disp)
  )

prop_geral <- aux_anulacao |> 
  with(mean(favoravel))

aux_anulacao |> 
  dplyr::group_by(ano) |> 
  dplyr::summarise(n = dplyr::n(), prop = mean(favoravel)) |> 
  dplyr::mutate(
    ano = glue::glue("{ano}\n(N={n})")
  ) |> 
  ggplot2::ggplot() +
  ggplot2::aes(ano, prop) +
  ggplot2::geom_col(fill = col_abj[1], width = .7) +
  ggplot2::geom_hline(
    yintercept = prop_geral, colour = 2, linetype = 2, size = 1
  ) +
  ggplot2::annotate(
    "text",
    x = 5,
    y = prop_geral,
    label = "Proporção geral",
    colour = 2,
    vjust = -.7,
    size = 3.5
  ) +
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ggplot2::labs(
    x = "Ano",
    y = "Proporção de decisões favoráveis"
  ) +
  ggplot2::theme_minimal(12)

```

#### Segunda instância

A taxa de recorribilidade estimada é maior que 60%. Isso ocorre porque foram encontrados 173 recursos nos 289 casos estudados. No entanto, foram encontrados casos com mais de um agravo de instrumento, que não foram considerados na análise. Por isso, a taxa é maior que 60% e não exatamente 60%.

Dividindo as taxas por categoria de processo, encontra-se o resultado da @tbl-tx-recorr-categoria. É possível notar que as anulatórias são as que apresentam maior taxa de recorribilidade.

```{r}
#| label: tbl-tx-recorr-categoria
#| tbl-cap: "Quantidade e taxa de recorribilidade por categoria."

da_tidy |> 
  dplyr::left_join(da_cposg_tidy, "id") |> 
  dplyr::group_by(categoria) |> 
  dplyr::summarise(
    total = dplyr::n(), 
    n = sum(!is.na(tem_decisao))
  ) |> 
  dplyr::mutate(prop = formattable::percent(n/total, 1)) |> 
  knitr::kable(col.names = c("Categoria", "N total", "N com recursos", "%"), digits = 1)

```


Já com relação à taxa de decisões desfavoráveis, observa-se uma taxa geral de 57% de recursos negados. Desconsiderando-se os casos prejudicados, não conhecidos, ou com reexame de prova, a taxa de casos improvidos aumenta para 64%.

Dividindo as taxas por categoria de processo, encontra-se o resultado da @tbl-tx-desf-categoria. É possível notar que as anulatórias são as que apresentam menor proporção de recursos negados. No entanto, as taxas são muito próximas entre as categorias.

```{r}
#| label: tbl-tx-desf-categoria
#| tbl-cap: "Quantidade e proporção de resultados por tipo de processo."

da_analise <- da_tidy |> 
  dplyr::inner_join(da_cposg_tidy, "id") |> 
  dplyr::filter(!is.na(dec))

tab_geral <- da_analise |> 
  dplyr::count(categoria, dec) |> 
  dplyr::group_by(categoria) |> 
  dplyr::mutate(prop = n/sum(n)) |>
  dplyr::ungroup() |> 
  dplyr::mutate(lab = stringr::str_glue("{n} ({scales::percent(prop, 1)})")) 

tab_total_col <- da_analise |> 
  dplyr::count(categoria) |> 
  dplyr::mutate(prop = n/sum(n)) |> 
  dplyr::mutate(lab = stringr::str_glue("{n} ({scales::percent(prop, 1)})")) |> 
  dplyr::select(Total = lab)

tab_total_row <- da_analise |> 
  dplyr::count(dec) |> 
  dplyr::mutate(prop = n/sum(n)) |> 
  dplyr::mutate(lab = stringr::str_glue("{n} ({scales::percent(prop, 1)})")) |> 
  dplyr::transmute(
    name = dec,
    value = lab
  ) |> 
  tidyr::pivot_wider() |> 
  dplyr::mutate(categoria = "Total", Total = stringr::str_glue("{nrow(da_analise)} (100%)"))

tab_geral |> 
  dplyr::select(dec, categoria, lab) |> 
  tidyr::pivot_wider(
    names_from = dec, 
    values_from = lab, 
    values_fill = "0 (0%)"
  ) |> 
  dplyr::bind_cols(tab_total_col) |> 
  dplyr::bind_rows(tab_total_row) |> 
  dplyr::rename(Categoria = categoria) |> 
  knitr::kable()




```


## Referências {.unnumbered}

::: {#refs}

:::
